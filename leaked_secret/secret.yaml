AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyProxyFunction:
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          AWS_ACCESS_KEY_ID: ASIAIOSFODNN7EXAMPLE
          AWS_ACCOUNT_ID: '123456789012'
      Runtime: nodejs12.x
      Role: !GetAtt 'FunctionExecutionRole.Arn'
      Handler: index.handler
      Code:
        ZipFile: "exports.handler = async (event) => {\n    const response = {\n \
          \       statusCode: 200,\n        body: JSON.stringify('Hello from Lambda!'),\n\
          \    };\n    return response;\n};\n"
      Tags:
        - Key: created_timestamp
          Value: 1646386203
        - Key: last_modified_timestamp
          Value: 1651757277
        - Key: resource_name
          Value: MyProxyFunction
        - Key: resource_type
          Value: AWS::Lambda::Function
        - Key: prancer_unique_id
          Value: 9e7c8bba-43a4-40bd-a1b0-3d974b9824fc
  FunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: created_timestamp
          Value: 1646386203
        - Key: last_modified_timestamp
          Value: 1651757277
        - Key: resource_name
          Value: FunctionExecutionRole
        - Key: resource_type
          Value: AWS::IAM::Role
        - Key: prancer_unique_id
          Value: b2c0a209-c719-4f10-af9e-03b8cf378d85
