AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyProxyFunction:
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          AWS_ACCESS_KEY_ID: ASIAIOSFODNN7EXAMPLE
          AWS_ACCOUNT_ID: '123456789012'
      Runtime: nodejs12.x
      Role: !GetAtt 'FunctionExecutionRole.Arn'
      Handler: index.handler
      Code:
        ZipFile: "exports.handler = async (event) => {\n    const response = {\n \
          \       statusCode: 200,\n        body: JSON.stringify('Hello from Lambda!'),\n\
          \    };\n    return response;\n};\n"
    Tags:
      - created_timestamp: 1646300565
        last_modified_timestamp: 1646300565
        resource_name: MyProxyFunction
        resource_type: AWS::Lambda::Function
        file_path: /tmp/tmppo4czohi/leaked_secret/secret.yaml
        prancer_unique_id: bf05c596-7f57-4543-80fd-d696cc9bf443
  FunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Tags:
      - created_timestamp: 1646300565
        last_modified_timestamp: 1646300565
        resource_name: FunctionExecutionRole
        resource_type: AWS::IAM::Role
        file_path: /tmp/tmppo4czohi/leaked_secret/secret.yaml
        prancer_unique_id: 15a3ac82-cb1b-4cc2-9ed2-bb2412b7a8f0
