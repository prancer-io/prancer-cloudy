AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: >-
  AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an
  Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the
  region in which the stack is run. This example creates an EC2 security group for
  the instance to give you SSH access. **WARNING** This template creates an Amazon
  EC2 instance. You will be billed for the AWS resources used if you create a stack
  from this template.
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - g3.8xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r3.12xlarge
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: '0.0.0.0/0'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups:
        - !Ref 'InstanceSecurityGroup'
      ImageId: !Ref 'LatestAmiId'
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via internet
      GroupName: default-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '445'
          ToPort: '445'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '53'
          ToPort: '53'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '20'
          ToPort: '23'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '20'
          ToPort: '20'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '4333'
          ToPort: '4333'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '137'
          ToPort: '137'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '138'
          ToPort: '138'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '25'
          ToPort: '25'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '23'
          ToPort: '23'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '5500'
          ToPort: '5500'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '5900'
          ToPort: '5900'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '135'
          ToPort: '135'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIpv6: ::/0
        - IpProtocol: '-1'
          FromPort: '22'
          ToPort: '22'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '8001'
          ToPort: '8001'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '8332'
          ToPort: '8333'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '8545'
          ToPort: '8545'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '30303'
          ToPort: '30303'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '1521'
          ToPort: '1521'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '5000'
          ToPort: '5000'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '5984'
          ToPort: '5984'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '6379'
          ToPort: '6380'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '9042'
          ToPort: '9042'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '11211'
          ToPort: '11211'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '27017'
          ToPort: '27017'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '28015'
          ToPort: '28015'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '29015'
          ToPort: '29015'
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: '50000'
          ToPort: '50000'
          CidrIpv6: ::/0
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 'EC2Instance.AvailabilityZone'
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt 'EC2Instance.PublicDnsName'
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt 'EC2Instance.PublicIp'
